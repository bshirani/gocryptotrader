package indicators

import (
	"testing"
)

func TestATR(t *testing.T) {
	expectedOutput := []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 239.48785714285728, 256.2772959183675, 275.32677478134127, 297.90914801124546, 298.8420660104422, 315.56763272398206, 313.45565895798336, 307.4945404609845, 296.8027875709141, 332.03044560156314, 333.1854137728801, 329.27502707481733, 331.01966799804455, 321.7468345696129, 350.67348924321203, 342.24038286869694, 339.12749837807576, 330.9969627796417, 334.92217972395304, 333.6991668865279, 323.0599406803473, 323.111373488894, 332.7319896682588, 347.3397046919546, 338.8482972139578, 343.49699027010365, 342.7772052508105, 331.42383344718115, 331.984988200954, 337.1239176151716, 332.58649492837367, 354.0074595763469, 352.9047838923221, 339.91587075715614, 336.37830856021634, 333.31557223448664, 342.9823170748804, 366.83786585524604, 358.3244468655856, 363.62270066090093, 359.4167934708366, 381.5327367943483, 386.61968416618055, 395.13827815431057, 415.87125828614546, 456.73759697999225, 446.2106257671357, 429.38129535519744, 409.7026314012547, 406.1524434440222, 416.2601260551634, 418.56440276550893, 441.6819454251154, 442.61537789475, 445.2464223308393, 433.4473921643508, 427.2090070097543, 431.9526493662005, 419.79603155432886, 403.11345787187673, 404.0139251667426, 389.28721622626097, 387.1695579243851, 424.2031609297863, 433.5550780062302, 432.9032867200709, 430.3237662400658, 627.6799257943468, 735.7277882376077, 726.8908033634929, 737.357888837529, 750.2001824919911, 741.893026599706, 720.7263818425841, 752.6459259966853, 803.8140741397792, 788.9323545583666, 783.5800435184832, 794.9993261243059, 773.4272314011412, 756.1731434439168, 721.5050617693513, 717.3025573572548, 690.7466604031652, 670.639041802939, 629.5876816741576}
	ret := ATR(testHigh, testLow, testClose, 14)
	if len(ret) != len(expectedOutput) {
		t.Fatalf("unexpected length of return slice %v", len(ret))
	}

	for x := range ret {
		if ret[x] != expectedOutput[x] {
			t.Fatalf("unexpected value returned %v", ret[x])
		}
	}

	ret = ATR(testHigh, testLow, testClose, 1)
	if len(ret) != len(expectedOutput) {
		t.Fatalf("unexpected length of return slice %v", len(ret))
	}

	if ret[1] != 445.1199999999999 {
		t.Fatalf("unexpected value returned %v", ret[1])
	}

	input := []float64{10, 5.0, 1.0}
	ret = ATR(input, input, input, 14)
	if ret[0] != 0 && ret[1] != 0 && ret[2] != 0 {
		t.Fatalf("unexpected values returned %v | %v | %v ",
			ret[0], ret[1], ret[2])
	}
}
